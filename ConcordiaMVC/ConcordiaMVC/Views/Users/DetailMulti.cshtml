@model ConcordiaMVC.Models.UserMultiList

@{
    ViewData["Title"] = "User Advanced Detail";
    Layout = "_Layout";
}

<style>
    .custom-width {
        width: calc(32.5%);
    }
</style>

<h2 class="display-5"> @ViewData["Title"] </h2>

<div class="d-flex flex-row">
    <div class="d-flex flex-column w-100">
        <h4> User </h4>
        <form class="border border-dark rounded p-3">
            <div class="row mb-3">
                <label for="inputId" class="col-sm-2 col-form-label">
                    @Html.LabelFor(model => model.Scientist.Id, new { @class = "form-label mr-1" })
                </label>
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Scientist.Id, new { @class = "form-control mb-2", @readonly = "readonly" })
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputCode" class="col-sm-2 col-form-label">
                    @Html.LabelFor(model => model.Scientist.Code, new { @class = "form-label mr-1" })
                </label>
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Scientist.Code, new { @class = "form-control mb-2", @readonly = "readonly" })
                </div>
            </div>
            <div class="row mb-0">
                <label for="inputFullName" class="col-sm-2 col-form-label">
                    @Html.LabelFor(model => model.Scientist.FullName, new { @class = "form-label mr-1" })
                </label>
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Scientist.FullName, new { @class = "form-control mb-2", @readonly = "readonly" })
                </div>
            </div>
        </form>

        <br>

        <div class="d-flex flex-wrap justify-content-between">
            <div class="custom-width">
                <div class="text-left">
                    <h4>Tasks in Start</h4>
                    <div class="d-flex flex-column align-items-center">
                        @foreach (var exInStart in Model.ExperimentsInStart!)
                        {
                            <div class="card w-100 mb-2 border border-dark">
                                <div class="card-body d-flex flex-column position-relative">
                                    <h5 class="card-title"> Id: @exInStart.Id - @exInStart.Name </h5>
                                    <h6 class="card-title"> Priority: <span style="color: @exInStart.Priority!.Color;"> @exInStart.Priority.Name </span> </h6>
                                    <h6 class="card-title"> State: @exInStart.State!.Name </h6>
                                    <h6 class="card-title"> Start: @exInStart.StartDate </h6>
                                    <h6 class="card-title"> Due: @exInStart.DueDate </h6>
                                    <a class="btn btn-outline-dark position-absolute bottom-0 end-0 m-3" asp-action="DetailTask" asp-route-id="@exInStart.Id"> Detail </a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="custom-width">
                <div class="text-left">
                    <h4>Tasks in Working</h4>
                    <div class="d-flex flex-column align-items-center">
                        @foreach (var exInWorking in Model.ExperimentsInWorking!)
                        {
                            <div class="card w-100 mb-2 border border-dark">
                                <div class="card-body d-flex flex-column position-relative">
                                    <h5 class="card-title"> Id: @exInWorking.Id - @exInWorking.Name</h5>
                                    <h6 class="card-title"> Priority: <span style="color: @exInWorking.Priority!.Color;">@exInWorking.Priority.Name </span> </h6>
                                    <h6 class="card-title"> State: @exInWorking.State!.Name </h6>
                                    <h6 class="card-title"> Start: @exInWorking.StartDate </h6>
                                    <h6 class="card-title"> Due: @exInWorking.DueDate </h6>
                                    <a class="btn btn-outline-dark position-absolute bottom-0 end-0 m-3" asp-action="DetailTask" asp-route-id="@exInWorking.Id"> Detail </a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="custom-width">
                <div class="text-left">
                    <h4>Tasks in Finish</h4>
                    <div class="d-flex flex-column align-items-center">
                        @foreach (var exInFinish in Model.ExperimentsInFinish!)
                        {
                            <div class="card w-100 mb-2 border border-dark">
                                <div class="card-body d-flex flex-column position-relative">
                                    <h5 class="card-title"> Id: @exInFinish.Id - @exInFinish.Name </h5>
                                    <h6 class="card-title"> Priority: <span style="color: @exInFinish.Priority!.Color;"> @exInFinish.Priority.Name </span> </h6>
                                    <h6 class="card-title"> State: @exInFinish.State!.Name </h6>
                                    <h6 class="card-title"> Start: @exInFinish.StartDate </h6>
                                    <h6 class="card-title"> Due: @exInFinish.DueDate </h6>
                                    <a class="btn btn-outline-dark position-absolute bottom-0 end-0 m-3" asp-action="DetailTask" asp-route-id="@exInFinish.Id"> Detail </a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>