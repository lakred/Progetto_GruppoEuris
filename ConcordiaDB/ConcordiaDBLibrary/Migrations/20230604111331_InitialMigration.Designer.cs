// <auto-generated />
using System;
using ConcordiaDBLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConcordiaDBLibrary.Migrations
{
    [DbContext(typeof(ConcordiaContext))]
    [Migration("20230604111331_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConcordiaDBLibrary.Models.Classes.Experiment", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("Code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("varchar(MAX)")
                        .HasColumnName("Description");

                    b.Property<DateTimeOffset?>("DueDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("DueDate");

                    b.Property<bool>("Loaded")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.Property<int>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("PriorityId");

                    b.Property<DateTimeOffset?>("StartDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("StartDate");

                    b.Property<int>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("StateId");

                    b.HasKey("Id")
                        .HasName("PK_Experiments");

                    b.HasIndex("PriorityId");

                    b.HasIndex("StateId");

                    b.ToTable("Experiments", (string)null);
                });

            modelBuilder.Entity("ConcordiaDBLibrary.Models.Classes.Participant", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("ExperimentId")
                        .HasColumnType("int")
                        .HasColumnName("ExperimentId");

                    b.Property<int?>("ScientistId")
                        .HasColumnType("int")
                        .HasColumnName("ScientistId");

                    b.HasKey("Id")
                        .HasName("PK_Participants");

                    b.HasIndex("ExperimentId");

                    b.HasIndex("ScientistId");

                    b.ToTable("Participants", (string)null);
                });

            modelBuilder.Entity("ConcordiaDBLibrary.Models.Classes.Priority", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("Code");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Color");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.HasKey("Id")
                        .HasName("PK_Priorities");

                    b.ToTable("Priorities", (string)null);
                });

            modelBuilder.Entity("ConcordiaDBLibrary.Models.Classes.Remark", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("Code");

                    b.Property<DateTimeOffset?>("Date")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Date");

                    b.Property<int>("ExperimentId")
                        .HasColumnType("int")
                        .HasColumnName("ExperimentId");

                    b.Property<int>("ScientistId")
                        .HasColumnType("int")
                        .HasColumnName("ScientistId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("varchar(MAX)")
                        .HasColumnName("Text");

                    b.HasKey("Id")
                        .HasName("PK_Remarks");

                    b.HasIndex("ExperimentId");

                    b.HasIndex("ScientistId");

                    b.ToTable("Remarks", (string)null);
                });

            modelBuilder.Entity("ConcordiaDBLibrary.Models.Classes.Scientist", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("Code");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FullName");

                    b.HasKey("Id")
                        .HasName("PK_Scientists");

                    b.ToTable("Scientists", (string)null);
                });

            modelBuilder.Entity("ConcordiaDBLibrary.Models.Classes.State", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("Code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.HasKey("Id")
                        .HasName("PK_States");

                    b.ToTable("States", (string)null);
                });

            modelBuilder.Entity("ConcordiaDBLibrary.Models.Classes.Experiment", b =>
                {
                    b.HasOne("ConcordiaDBLibrary.Models.Classes.Priority", "Priority")
                        .WithMany("Experiments")
                        .HasForeignKey("PriorityId")
                        .IsRequired()
                        .HasConstraintName("FK_Experiments_Priorities");

                    b.HasOne("ConcordiaDBLibrary.Models.Classes.State", "State")
                        .WithMany("Experiments")
                        .HasForeignKey("StateId")
                        .IsRequired()
                        .HasConstraintName("FK_Experiments_States");

                    b.Navigation("Priority");

                    b.Navigation("State");
                });

            modelBuilder.Entity("ConcordiaDBLibrary.Models.Classes.Participant", b =>
                {
                    b.HasOne("ConcordiaDBLibrary.Models.Classes.Experiment", "Experiment")
                        .WithMany("Participants")
                        .HasForeignKey("ExperimentId")
                        .IsRequired()
                        .HasConstraintName("FK_Participants_Experiments");

                    b.HasOne("ConcordiaDBLibrary.Models.Classes.Scientist", "Scientist")
                        .WithMany("Participants")
                        .HasForeignKey("ScientistId")
                        .HasConstraintName("FK_Participants_Scientists");

                    b.Navigation("Experiment");

                    b.Navigation("Scientist");
                });

            modelBuilder.Entity("ConcordiaDBLibrary.Models.Classes.Remark", b =>
                {
                    b.HasOne("ConcordiaDBLibrary.Models.Classes.Experiment", "Experiment")
                        .WithMany("Remarks")
                        .HasForeignKey("ExperimentId")
                        .IsRequired()
                        .HasConstraintName("FK_Remarks_Experiments");

                    b.HasOne("ConcordiaDBLibrary.Models.Classes.Scientist", "Scientist")
                        .WithMany("Remarks")
                        .HasForeignKey("ScientistId")
                        .IsRequired()
                        .HasConstraintName("FK_Remarks_Scientists");

                    b.Navigation("Experiment");

                    b.Navigation("Scientist");
                });

            modelBuilder.Entity("ConcordiaDBLibrary.Models.Classes.Experiment", b =>
                {
                    b.Navigation("Participants");

                    b.Navigation("Remarks");
                });

            modelBuilder.Entity("ConcordiaDBLibrary.Models.Classes.Priority", b =>
                {
                    b.Navigation("Experiments");
                });

            modelBuilder.Entity("ConcordiaDBLibrary.Models.Classes.Scientist", b =>
                {
                    b.Navigation("Participants");

                    b.Navigation("Remarks");
                });

            modelBuilder.Entity("ConcordiaDBLibrary.Models.Classes.State", b =>
                {
                    b.Navigation("Experiments");
                });
#pragma warning restore 612, 618
        }
    }
}
